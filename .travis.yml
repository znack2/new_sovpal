
addons:
    hosts:
        - localhost
sudo: false

# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

sudo: true

php:
  - 5.6
  - 5.5
  - 5.4

sudo: false

# environment variable used in test suite
env:
  global:
    - setup=basic
    - APP_ENV=staging
    - APP_DEBUG=true
    - APP_KEY=xxxx
    - DB_CONNECTION=sqlite
    - CACHE_DRIVER=file
    - SESSION_DRIVER=file
    - QUEUE_DRIVER=sync
    - TEST_ENVIRONMENT=travis

# faster builds on new travis setup not using sudo
sudo: false

# cache vendor dirs
cache:
  directories:
    - vendor
    - $HOME/.composer/cache

# install dependencies
install:
  - if [[ $setup = 'basic' ]]; then travis_retry composer install --no-interaction --prefer-source; fi
  - if [[ $setup = 'stable' ]]; then travis_retry composer update --prefer-source --no-interaction --prefer-stable; fi
  - if [[ $setup = 'lowest' ]]; then travis_retry composer update --prefer-source --no-interaction --prefer-lowest --prefer-stable; fi

  - travis_retry composer self-update
  - travis_retry composer global require "codeception/codeception:2.0.*@dev"
  - travis_retry composer global require "fxp/composer-asset-plugin:~1.0"
  - travis_retry composer install --prefer-dist


# optionally specify a list of environments, for example to test different RDBMS
env:
  - DB=sqlite_testing

# execute any number of scripts before the test run, custom env's are available as variables
# omitting "script:" will default to phpunit
# use the $DB env variable to determine the phpunit.xml to use

after_success:
  - codecov

after_failure:
  - cat tests/_output/AccessoriesCept.fail.html
#  - curl http://localhost:4444
  - curl http://localhost:8000/login
# configure notifications (email, IRC, campfire etc)
notifications:
  email: false
  slack:
    secure: vv9we1RxB9RsrMbomSdq6D7vz/okobw87pEkgIZjB+hj1QpQ2by90gsPsOa+NgsJEFaEP7e4KlT6SH8kK+zhbmuKaUd3d1//XdcancE22LZXi6tkiB5yuR/Jhhb1LLDqyGJTB4D92hMnnCPiUjpxNA3r437ttNeYRdYIEEP3drA=
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/5e136eb0c1965f3918d0
    on_success: change  # options: [always|never|change] default: always
    on_failure: change  # options: [always|never|change] default: always
    on_start: false     # default: false

    matrix:
      fast_finish: true
     
      allow_failures:
        - php: hhvm
     
    cache:
      directories:
        - laravel #only cache the laravel directory
     
    services: mysql
     
    install:
      # create a new database for the hyn connection
      - export DB_USERNAME=travis DB_DATABASE=hyn DB_PASSWORD= QUEUE_DRIVER=sync
      # specify the laravel service providers to insert
      - export PACKAGE_PROVIDER="
        Kevupton\\\\Bookings\\\\Providers\\\\BookingsServiceProvider::class,
        Kevupton\\\\Timetables\\\\Providers\\\\TimetablesServiceProvider::class"
      #specify the seed class to seed the data
      - export SEED_CLASS=TestSeeds::class
      #specify the package to test
      - export PACKAGE_NAME=kevupton/bookings
      #run the setup script
      - curl -s https://raw.githubusercontent.com/kevupton/docker-laravel-tests/master/setup.sh | bash
     

  before_script:
  - cp .env.travis .env
  - mysql -e 'create database homestead_test;'
  - composer self-update
  - composer install --no-interaction
  - cd tests
  - ~/.composer/vendor/bin/codecept build
  - cd codeception/_app/web
  - php -S localhost:8080 > /dev/null 2>&1 &
  - cd ../../../
  #  - php -S localhost:8000 &
      - mkdir travis-phantomjs
      - wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 -O $PWD/travis-phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
      - tar -xvf $PWD/travis-phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2 -C $PWD/travis-phantomjs
      - export PATH=$PWD/travis-phantomjs/phantomjs-2.1.1-linux-x86_64/bin:$PATH

      - phantomjs --webdriver=4444  &
      - sleep 10
      - touch database/testing.sqlite
      - composer self-update
      - composer install -n --prefer-source
      - cp .env.testing .env
      - chmod -R 777 storage
      - php artisan migrate --database=sqlite_testing --force
      - ./vendor/bin/codecept build
      - php artisan key:generate
      - php artisan db:seed --database=sqlite_testing --force
      - php artisan admin:create --first_name=Alison --last_name=Foobar --email=me@example.com --username=snipe --password=password
      - php artisan serve --port=8000 --host=localhost &
      - sleep 5
      - pip install --user codecov
      - sleep 5

    # Install Apache
      - sudo apt-get update -qq
      - sudo apt-get install -y --force-yes apache2 libapache2-mod-php5 php5-curl php5-mysql php5-intl > /dev/null
      - sudo chmod 777 -R /home/travis/build/redCOMPONENT-COM/redSHOP/
      - sudo ln -s /home/travis/build/redCOMPONENT-COM/redSHOP/tests/system/joomla-cms/ /var/www/joomla-cms #Add     joomla to apache htdocs
      - sudo sed -i -e "s,AllowOverride[ ]None,AllowOverride All,g" /etc/apache2/sites-available/default
      - sudo /etc/init.d/apache2 restart
      - composer install --dev --prefer-dist

  # XVFB
      - "export DISPLAY=:99.0"
      - "Xvfb :99.0 -extension RANDR > /dev/null &"

  # Window manager
      - echo "c10"
      - "sudo apt-get install fluxbox -y --force-yes"
      - echo "c11"
      - "fluxbox &"

  # Selenium server
      - "wget http://selenium-release.storage.googleapis.com/2.41/selenium-server-standalone-2.41.0.jar"
      - "java -jar selenium-server-standalone-2.41.0.jar > /dev/null 2>/dev/null &"
      - sleep 30 # gives enough time to Selenium to start


    script:
    # script: ./vendor/bin/codecept run --env testing-ci <-- this doesn't work
    # script: ./vendor/bin/codecept run unit
    ./vendor/bin/codecept run
      ~/.composer/vendor/bin/codecept run
      - php .travis/traviswebserverckecker.php http://localhost/joomla-cms/installation/index.php # Test apache
      - mv tests/acceptance.suite.dist.yml tests/acceptance.suite.yml # Create travis system tests config file
      - "wget http://codeception.com/codecept.phar"
      - php ./codecept.phar build
      - php ./codecept.phar run acceptance
      #script to setup the package for testing
      - cd laravel
      - composer update
      - php artisan vendor:publish --force
      - php artisan migrate --seed #setups the migrations and seeding
      - phpunit "vendor/$PACKAGE_NAME" #runs the phpunit just for your package.